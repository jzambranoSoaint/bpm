// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Backend.Shared.Entities.Models.Pamec;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Backend.Shared.Repositories;

namespace Backend.Shared.Repositories.Context
{
    public partial class dbaeusdsdevpamecContext : DbContext
    {
        public dbaeusdsdevpamecContext()
        {
        }

        public dbaeusdsdevpamecContext(DbContextOptions<dbaeusdsdevpamecContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Cargo> Cargo { get; set; }
        public virtual DbSet<Constante> Constante { get; set; }
        public virtual DbSet<Criterio> Criterio { get; set; }
        public virtual DbSet<Criterio_TipoDocumento> Criterio_TipoDocumento { get; set; }
        public virtual DbSet<Dependencia> Dependencia { get; set; }
        public virtual DbSet<Documento_RegistroPAMEC_RegistroSIC> Documento_RegistroPAMEC_RegistroSIC { get; set; }
        public virtual DbSet<Entidad> Entidad { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Menu_Cargo> Menu_Cargo { get; set; }
        public virtual DbSet<MiembroComision> MiembroComision { get; set; }
        public virtual DbSet<Permiso> Permiso { get; set; }
        public virtual DbSet<Registro> Registro { get; set; }
        public virtual DbSet<RegistroPAMEC> RegistroPAMEC { get; set; }
        public virtual DbSet<RegistroSIC> RegistroSIC { get; set; }
        public virtual DbSet<Responsable> Responsable { get; set; }
        public virtual DbSet<Sede> Sede { get; set; }
        public virtual DbSet<SeguimientoPAMEC> SeguimientoPAMEC { get; set; }
        public virtual DbSet<SeguimientoSIC> SeguimientoSIC { get; set; }
        public virtual DbSet<TableAux> TableAux { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Usuario_Cargo> Usuario_Cargo { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Constante>(entity =>
            {
                entity.Property(e => e.descripcion).IsUnicode(false);

                entity.Property(e => e.nombre).IsUnicode(false);
            });

            modelBuilder.Entity<Criterio>(entity =>
            {
                entity.Property(e => e.nombre).IsUnicode(false);
            });

            modelBuilder.Entity<Criterio_TipoDocumento>(entity =>
            {
                entity.HasIndex(e => e.idCriterio)
                    .HasName("FK_2");

                entity.HasIndex(e => e.idTipoDocumento)
                    .HasName("FK_3");

                entity.HasOne(d => d.idCriterioNavigation)
                    .WithMany(p => p.Criterio_TipoDocumento)
                    .HasForeignKey(d => d.idCriterio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_29");

                entity.HasOne(d => d.idTipoDocumentoNavigation)
                    .WithMany(p => p.Criterio_TipoDocumento)
                    .HasForeignKey(d => d.idTipoDocumento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_30");
            });

            modelBuilder.Entity<Dependencia>(entity =>
            {
                entity.Property(e => e.nombre).IsUnicode(false);
            });

            modelBuilder.Entity<Documento_RegistroPAMEC_RegistroSIC>(entity =>
            {
                entity.HasIndex(e => e.idCriterioTipoDocumento)
                    .HasName("FK_5");

                entity.HasIndex(e => e.idRegistroPAMEC)
                    .HasName("FK_3");

                entity.HasIndex(e => e.idRegistroSIC)
                    .HasName("FK_4");

                entity.Property(e => e.idGestorDocumental).IsUnicode(false);

                entity.Property(e => e.nombre).IsUnicode(false);

                entity.Property(e => e.observaciones).IsUnicode(false);

                entity.HasOne(d => d.idCriterioTipoDocumentoNavigation)
                    .WithMany(p => p.Documento_RegistroPAMEC_RegistroSIC)
                    .HasForeignKey(d => d.idCriterioTipoDocumento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_35_1");

                entity.HasOne(d => d.idRegistroPAMECNavigation)
                    .WithMany(p => p.Documento_RegistroPAMEC_RegistroSIC)
                    .HasForeignKey(d => d.idRegistroPAMEC)
                    .HasConstraintName("FK_8");

                entity.HasOne(d => d.idRegistroSICNavigation)
                    .WithMany(p => p.Documento_RegistroPAMEC_RegistroSIC)
                    .HasForeignKey(d => d.idRegistroSIC)
                    .HasConstraintName("FK_13");
            });

            modelBuilder.Entity<Entidad>(entity =>
            {
                entity.Property(e => e.codigo).IsUnicode(false);

                entity.Property(e => e.nomRepresentanteLegal).IsUnicode(false);

                entity.Property(e => e.numDocRepresLegal).IsUnicode(false);

                entity.Property(e => e.numDocumento).IsUnicode(false);

                entity.Property(e => e.razonSocial).IsUnicode(false);

                entity.HasOne(d => d.idTipoDocRepresLegalNavigation)
                    .WithMany(p => p.EntidadidTipoDocRepresLegalNavigation)
                    .HasForeignKey(d => d.idTipoDocRepresLegal)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("ENTIDAD_CONSTANTE_FK_1");

                entity.HasOne(d => d.idTipoDocumentoNavigation)
                    .WithMany(p => p.EntidadidTipoDocumentoNavigation)
                    .HasForeignKey(d => d.idTipoDocumento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("ENTIDAD_CONSTANTE_FK");

                entity.HasOne(d => d.idTipoPrestadorNavigation)
                    .WithMany(p => p.EntidadidTipoPrestadorNavigation)
                    .HasForeignKey(d => d.idTipoPrestador)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("ENTIDAD_CONSTANTE_FK_2");
            });

            modelBuilder.Entity<Menu_Cargo>(entity =>
            {
                entity.HasIndex(e => e.idCargo)
                    .HasName("FK_2");

                entity.HasIndex(e => e.idMenu)
                    .HasName("FK_3");

                entity.HasOne(d => d.idCargoNavigation)
                    .WithMany(p => p.Menu_Cargo)
                    .HasForeignKey(d => d.idCargo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_26");

                entity.HasOne(d => d.idMenuNavigation)
                    .WithMany(p => p.Menu_Cargo)
                    .HasForeignKey(d => d.idMenu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_27");
            });

            modelBuilder.Entity<MiembroComision>(entity =>
            {
                entity.HasIndex(e => e.idRegistro)
                    .HasName("FK_2");

                entity.HasIndex(e => e.idUsuarioCargo)
                    .HasName("FK_4");

                entity.HasOne(d => d.idRegistroNavigation)
                    .WithMany(p => p.MiembroComision)
                    .HasForeignKey(d => d.idRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_1");

                entity.HasOne(d => d.idUsuarioCargoNavigation)
                    .WithMany(p => p.MiembroComision)
                    .HasForeignKey(d => d.idUsuarioCargo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_32");
            });

            modelBuilder.Entity<Permiso>(entity =>
            {
                entity.HasIndex(e => e.id)
                    .HasName("FK_2");

                entity.Property(e => e.id).ValueGeneratedNever();

                entity.HasOne(d => d.idNavigation)
                    .WithOne(p => p.Permiso)
                    .HasForeignKey<Permiso>(d => d.id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_28");
            });

            modelBuilder.Entity<Registro>(entity =>
            {
                entity.HasIndex(e => e.idResponsablePAMEC)
                    .HasName("FK_3");

                entity.HasIndex(e => e.idResponsableSIC)
                    .HasName("FK_2");

                entity.HasOne(d => d.idResponsablePAMECNavigation)
                    .WithMany(p => p.RegistroidResponsablePAMECNavigation)
                    .HasForeignKey(d => d.idResponsablePAMEC)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_10");

                entity.HasOne(d => d.idResponsableSICNavigation)
                    .WithMany(p => p.RegistroidResponsableSICNavigation)
                    .HasForeignKey(d => d.idResponsableSIC)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_9");
            });

            modelBuilder.Entity<RegistroPAMEC>(entity =>
            {
                entity.HasIndex(e => e.idAlcanceMejoramiento)
                    .HasName("FK_4");

                entity.HasIndex(e => e.idEstadoEvaluacionSegumiento)
                    .HasName("FK_5");

                entity.HasIndex(e => e.idGrupoClasificacion)
                    .HasName("FK_3");

                entity.HasIndex(e => e.idRegistro)
                    .HasName("FK_2");

                entity.Property(e => e.anoVigencia).IsUnicode(false);

                entity.Property(e => e.motivosNoEnvioReporte).IsUnicode(false);

                entity.HasOne(d => d.idAlcanceMejoramientoNavigation)
                    .WithMany(p => p.RegistroPAMECidAlcanceMejoramientoNavigation)
                    .HasForeignKey(d => d.idAlcanceMejoramiento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_15");

                entity.HasOne(d => d.idEstadoEvaluacionSegumientoNavigation)
                    .WithMany(p => p.RegistroPAMECidEstadoEvaluacionSegumientoNavigation)
                    .HasForeignKey(d => d.idEstadoEvaluacionSegumiento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_34");

                entity.HasOne(d => d.idGrupoClasificacionNavigation)
                    .WithMany(p => p.RegistroPAMECidGrupoClasificacionNavigation)
                    .HasForeignKey(d => d.idGrupoClasificacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_12_1");

                entity.HasOne(d => d.idRegistroNavigation)
                    .WithMany(p => p.RegistroPAMEC)
                    .HasForeignKey(d => d.idRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_4");
            });

            modelBuilder.Entity<RegistroSIC>(entity =>
            {
                entity.HasIndex(e => e.idFuenteAnalisis)
                    .HasName("FK_3");

                entity.HasIndex(e => e.idRegistro)
                    .HasName("FK_2");

                entity.Property(e => e.motivosNoEnvioAnalisisInfo).IsUnicode(false);

                entity.Property(e => e.motivosNoEnvioReporte).IsUnicode(false);

                entity.Property(e => e.otraFuenteAnalisis).IsUnicode(false);

                entity.Property(e => e.porcentajeEjecucion).IsUnicode(false);

                entity.HasOne(d => d.idFuenteAnalisisNavigation)
                    .WithMany(p => p.RegistroSIC)
                    .HasForeignKey(d => d.idFuenteAnalisis)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_16");

                entity.HasOne(d => d.idRegistroNavigation)
                    .WithMany(p => p.RegistroSIC)
                    .HasForeignKey(d => d.idRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_5");
            });

            modelBuilder.Entity<Responsable>(entity =>
            {
                entity.Property(e => e.cargo).IsUnicode(false);

                entity.Property(e => e.celular).IsUnicode(false);

                entity.Property(e => e.correoElectronico).IsUnicode(false);

                entity.Property(e => e.nombre).IsUnicode(false);
            });

            modelBuilder.Entity<Sede>(entity =>
            {
                entity.Property(e => e.codigo).IsUnicode(false);

                entity.Property(e => e.direccion).IsUnicode(false);

                entity.Property(e => e.localidad).IsUnicode(false);

                entity.Property(e => e.nombreComercial).IsUnicode(false);

                entity.Property(e => e.telefono).IsUnicode(false);

                entity.HasOne(d => d.idEntidadNavigation)
                    .WithMany(p => p.Sede)
                    .HasForeignKey(d => d.idEntidad)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("SEDE_ENTIDAD_FK");
            });

            modelBuilder.Entity<SeguimientoPAMEC>(entity =>
            {
                entity.HasIndex(e => e.idAccionATomar)
                    .HasName("FK_6");

                entity.HasIndex(e => e.idDetalleAccionAdmin)
                    .HasName("FK_5");

                entity.HasIndex(e => e.idRegistro)
                    .HasName("FK_2");

                entity.HasIndex(e => e.idResultadoEjecucion)
                    .HasName("FK_4");

                entity.HasIndex(e => e.idTipoVisita)
                    .HasName("FK_3");

                entity.HasIndex(e => e.idVerificador)
                    .HasName("FK_7");

                entity.HasIndex(e => e.realizoReportesPAMEC)
                    .HasName("FK_8");

                entity.Property(e => e.causasOrigenActAdmin).IsUnicode(false);

                entity.Property(e => e.celular).IsUnicode(false);

                entity.Property(e => e.motivoNoEnvioReporte).IsUnicode(false);

                entity.Property(e => e.obsRealizoReportesPAMEC).IsUnicode(false);

                entity.Property(e => e.obsResultadoEjecucion).IsUnicode(false);

                entity.Property(e => e.observaciones).IsUnicode(false);

                entity.HasOne(d => d.idAccionATomarNavigation)
                    .WithMany(p => p.SeguimientoPAMECidAccionATomarNavigation)
                    .HasForeignKey(d => d.idAccionATomar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_21");

                entity.HasOne(d => d.idDetalleAccionAdminNavigation)
                    .WithMany(p => p.SeguimientoPAMECidDetalleAccionAdminNavigation)
                    .HasForeignKey(d => d.idDetalleAccionAdmin)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_20");

                entity.HasOne(d => d.idRegistroNavigation)
                    .WithMany(p => p.SeguimientoPAMEC)
                    .HasForeignKey(d => d.idRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_11");

                entity.HasOne(d => d.idResultadoEjecucionNavigation)
                    .WithMany(p => p.SeguimientoPAMECidResultadoEjecucionNavigation)
                    .HasForeignKey(d => d.idResultadoEjecucion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_19");

                entity.HasOne(d => d.idTipoVisitaNavigation)
                    .WithMany(p => p.SeguimientoPAMECidTipoVisitaNavigation)
                    .HasForeignKey(d => d.idTipoVisita)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_17");

                entity.HasOne(d => d.idVerificadorNavigation)
                    .WithMany(p => p.SeguimientoPAMEC)
                    .HasForeignKey(d => d.idVerificador)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_33");

                entity.HasOne(d => d.realizoReportesPAMECNavigation)
                    .WithMany(p => p.SeguimientoPAMECrealizoReportesPAMECNavigation)
                    .HasForeignKey(d => d.realizoReportesPAMEC)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_35");
            });

            modelBuilder.Entity<SeguimientoSIC>(entity =>
            {
                entity.HasIndex(e => e.idDetalleAccionAdmin)
                    .HasName("FK_4");

                entity.HasIndex(e => e.idRegistro)
                    .HasName("FK_2");

                entity.HasIndex(e => e.idTipoVisita)
                    .HasName("FK_3");

                entity.HasIndex(e => e.idVerificador)
                    .HasName("FK_5");

                entity.Property(e => e.causasOrigenActAdmin).IsUnicode(false);

                entity.Property(e => e.celular).IsUnicode(false);

                entity.Property(e => e.correoElectronico).IsUnicode(false);

                entity.Property(e => e.observaciones).IsUnicode(false);

                entity.Property(e => e.porcentajeEjecucion).IsUnicode(false);

                entity.HasOne(d => d.idDetalleAccionAdminNavigation)
                    .WithMany(p => p.SeguimientoSICidDetalleAccionAdminNavigation)
                    .HasForeignKey(d => d.idDetalleAccionAdmin)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_22");

                entity.HasOne(d => d.idRegistroNavigation)
                    .WithMany(p => p.SeguimientoSIC)
                    .HasForeignKey(d => d.idRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_12");

                entity.HasOne(d => d.idTipoVisitaNavigation)
                    .WithMany(p => p.SeguimientoSICidTipoVisitaNavigation)
                    .HasForeignKey(d => d.idTipoVisita)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_18");

                entity.HasOne(d => d.idVerificadorNavigation)
                    .WithMany(p => p.SeguimientoSIC)
                    .HasForeignKey(d => d.idVerificador)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_32_1");
            });

            modelBuilder.Entity<TableAux>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.id).HasDefaultValueSql("(newid())");

                entity.Property(e => e.nombre).IsUnicode(false);

                entity.Property(e => e.telefono).IsUnicode(false);
            });

            modelBuilder.Entity<TipoDocumento>(entity =>
            {
                entity.Property(e => e.nombre).IsUnicode(false);
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.HasIndex(e => e.idTipoIdentificaicon)
                    .HasName("FK_2");

                entity.Property(e => e.numIdentificacion).IsUnicode(false);

                entity.Property(e => e.telefono).IsUnicode(false);

                entity.HasOne(d => d.idDpendenciaNavigation)
                    .WithMany(p => p.Usuario)
                    .HasForeignKey(d => d.idDpendencia)
                    .HasConstraintName("FK_USUARIO_DEPENDENCIA");

                entity.HasOne(d => d.idTipoIdentificaiconNavigation)
                    .WithMany(p => p.UsuarioidTipoIdentificaiconNavigation)
                    .HasForeignKey(d => d.idTipoIdentificaicon)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_23");

                entity.HasOne(d => d.tipoVinculacionNavigation)
                    .WithMany(p => p.UsuariotipoVinculacionNavigation)
                    .HasForeignKey(d => d.tipoVinculacion)
                    .HasConstraintName("FK_USUARIO_CONSTANTE");
            });

            modelBuilder.Entity<Usuario_Cargo>(entity =>
            {
                entity.HasIndex(e => e.idCargo)
                    .HasName("FK_3");

                entity.HasIndex(e => e.idUsuario)
                    .HasName("FK_2");

                entity.HasOne(d => d.idCargoNavigation)
                    .WithMany(p => p.Usuario_Cargo)
                    .HasForeignKey(d => d.idCargo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_25");

                entity.HasOne(d => d.idUsuarioNavigation)
                    .WithMany(p => p.Usuario_Cargo)
                    .HasForeignKey(d => d.idUsuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_24");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}